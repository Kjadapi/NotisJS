NotisJS library syntax, explanation & instruction:
To set up Notis, go to your HTML file and link the JS file:

<script src="Notis.min.js" defer></script>

To show a Notis message, write:

Notis.show('Your message', NotifyLength.SHORT);
Notis.show('Your message', NotifyLength.LONG);

> Note: You can't use raw millisecond values like 3000. Only NotifyLength.SHORT (4 sec) or NotifyLength.LONG (7 sec) are allowed.

Theme and Customization:

• Predefined Color Templates (PCT). 
    A predefined theme designed to enhance the message style without much effort.
    Use PCT presets to quickly style your message:
    
    Notis.show('Hello', NotisLength.SHORT, Theme.DARK);
    
    Available PCT's:
    • Theme.DEFAULT - Gray bg / White text
    • Theme.DARK - Black bg / White text
    • Theme.BRIGHT - White bg / Black text
    • Theme.BLUE - Blue bg / White text
    • Theme.PURPLE - Purple bg / White text
    • Theme.INDIGO - Indigo bg / White text
    • Theme.LIGHT_BLUE - LightBlue bg / Black text
    • Theme.WT_LIGHT_BLUE - LightBlue bg / White text
  ️
• Custom Styling:
    You can fully customize the style with:
    .themeCol() // Define your own custom background color 
    .themeTxt() // Define your own custom text color
    .edgeFrame() // Add & adjust the border color
    .linearGrad() // Add a background linear gradient effect
    
    Example:↓
    Notis.show('Custom', NotifyLength.SHORT)
      .themeCol('#333') // Bg color
      .themeTxt('white') // Text color
      .edgeFrame('magenta'); // Border effect
      ((Optional) you can customize the border width now: edgeFrame('color', 'borderWidth')) 
    
    For gradient background:
    
    Notis.show('Gradient', NotifyLength.SHORT)
      .linearGrad('to right', 'blue', 'cyan');
    
• Positioning the Message:
    To change the position of the message, use displayAt(); :
    
    Notis.show('Positioned', NotifyLength.SHORT)
      .displayAt('head-end');
    
    Available positions:
    • "base"   (bottom, center)
    • "head"   (top, center)
    • "start"   (left, center)
    • "end"   (right, center)
    • "base-start"   (bottom, left)
    • "base-end"   (bottom, right)
    • "head-start"   (top, left)
    • "head-end"   (top, right)
  
• Animation:
    To add the animation, you use notisAnim(), example:
    
    Notis.show('Slide!', NotifyLength.SHORT)
      .notisAnim('slide-back-up');
    
    Available animations (more to come):
    • fade-in-out
    • slide-up
    • slide-down
    • slide-back-up
    • slide-back-down
    
• Global styling
    To set the default theme of the Notis message,
    use Notis.setDefaults({..}). Ex:
    
    Notis.setDefaults({
      themeCol: 'color', // Adjust the default bg color
      themeTxt: 'color', // Adjust the default txt color
      edgeFrame: ['color', 'thickness(optional)'], // Adjust the border color & border width
      notisAnim: 'animation', // Adjust the default animation
      displayAt: 'position', // Adjust the default position
      linearGrad: ['direction', 'color, 'color'], // Adjust the default linear gradient color
      placement: 'queue' // Make the toast appear one after another (Exclusive)
    })

Dev Notes:

- Always load Notis.js before your own scripts:
  -----------
  <script src="Notis.min.js" defer></script>
  <script src="yourscript.js"></script>
  -----------
- Avoid using these variable names globally: Notis, Theme, NotifyLength
- Other library integration/support is not guaranteed/tested
- This library is still in BETA

Written by: Kjadapi (2025)
